services:
  db:
    image: mariadb:11.6.2
    container_name: multiverse-payroll-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-multiverse_db}
      MYSQL_USER: ${MYSQL_USER:-multiverse_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-multiverse_password}
      SEED_DATA: ${SEED_DATA:-false}
    ports:
      - "${DB_PORT:-3307}:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./database/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - multiverse-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: multiverse_backend
    restart: unless-stopped
    environment:
      DB_HOST: db
      DB_NAME: ${MYSQL_DATABASE:-multiverse_db}
      DB_USER: ${MYSQL_USER:-multiverse_user}
      DB_PASSWORD: ${MYSQL_PASSWORD:-multiverse_password}
    volumes:
      - ./backend:/var/www/html
    depends_on:
      db:
        condition: service_healthy
    networks:
      - multiverse-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: multiverse_frontend
    restart: unless-stopped
    volumes:
      - frontend_dist:/usr/share/nginx/html
    networks:
      - multiverse-network

  nginx:
    image: nginx:1.27.3-alpine
    container_name: multiverse_nginx
    restart: unless-stopped
    ports:
      - "${APP_PORT:-9090}:80"
    volumes:
      - ./backend:/var/www/html
      - frontend_dist:/var/www/frontend:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - multiverse-network

volumes:
  db_data:
    driver: local
  frontend_dist:
    driver: local

networks:
  multiverse-network:
    driver: bridge
